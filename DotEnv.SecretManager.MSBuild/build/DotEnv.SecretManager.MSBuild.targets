<Project>
	<UsingTask
	  TaskName="DotEnv.SecretManager.MSBuild.Tasks.EncryptEnvTask"
	  AssemblyFile="$(MSBuildThisFileDirectory)../lib/net9.0/DotEnv.SecretManager.MSBuild.dll" />
	<UsingTask
	  TaskName="DotEnv.SecretManager.MSBuild.Tasks.DecryptEnvTask"
	  AssemblyFile="$(MSBuildThisFileDirectory)../lib/net9.0/DotEnv.SecretManager.MSBuild.dll" />

	<PropertyGroup>
		<EnvEncryptionPassword Condition="'$(EnvEncryptionPassword)' == ''">$(ENV_ENCRYPTION_PASSWORD)</EnvEncryptionPassword>
		<EnvInputFile Condition="'$(EnvInputFile)' == ''">$(MSBuildProjectDirectory)/.env</EnvInputFile>
		<EnvOutputFile Condition="'$(EnvOutputFile)' == ''">$(MSBuildProjectDirectory)/.env.enc</EnvOutputFile>
	</PropertyGroup>

	<!-- Hook into a target that definitely runs -->
	<Target Name="EncryptEnvFiles" AfterTargets="ResolvePackageAssets" BeforeTargets="CoreCompile" Condition="'$(AutoEncryptEnv)' == 'true'">
		<Message Text="[DotEnv] Running automatic encryption..." Importance="high" />
		<EncryptEnvTask
		  InputFile="$(EnvInputFile)"
		  OutputFile="$(EnvOutputFile)"
		  Password="$(EnvEncryptionPassword)"
		  Condition="Exists('$(EnvInputFile)') And '$(EnvEncryptionPassword)' != ''" />
		<Message Text="[DotEnv] Skipped: No .env file or password" Condition="!Exists('$(EnvInputFile)') Or '$(EnvEncryptionPassword)' == ''" Importance="high" />
	</Target>

	<Target Name="DecryptEnvFiles" AfterTargets="ResolvePackageAssets" BeforeTargets="CoreCompile" Condition="'$(AutoDecryptEnv)' == 'true'">
		<Message Text="[DotEnv] Running automatic decryption..." Importance="high" />
		<DecryptEnvTask
		  InputFile="$(EnvOutputFile)"
		  OutputFile="$(EnvInputFile)"
		  Password="$(EnvEncryptionPassword)"
		  Condition="Exists('$(EnvOutputFile)') And '$(EnvEncryptionPassword)' != ''" />
		<Message Text="[DotEnv] Skipped: No .env.enc file or password" Condition="!Exists('$(EnvOutputFile)') Or '$(EnvEncryptionPassword)' == ''" Importance="high" />
	</Target>
</Project>